// here we initialize and assign values to our r,g,b global variables
int r = 0;
int g = 0;
int b = 0;

void setup() {
  fullScreen(); // instead of calling size(); we can call fullScreen();
  background(0); // for a black background that we will repetitively draw over
}

void draw() {
  
  // here we use 3 if statements to decide how to increment the r,g,b values
  if (r < 256) {
    r++;
  } else {
    r = 0;
    g++;
  }
  
  if (g == 256) {
    g = 0;
    b++;
  }
  
  if (b == 256) {
    b = 0;
  }
  
  // here we print to console the r,g,b values we will use for our points
  println("r,g,b: " + r + ", " + g + ", " + b);
  
  // here we use a for loop to draw 50 randomly-sized points at random places
  for (int i = 0; i < 50; i++) {
    
    // here we generate our random variables for x,y and size
    int randomX = int(random(width)); // generate a random X position between 0 and width
    int randomY = int(random(height)); // generate a random Y position betweeen 0 and height
    int randomSize = int(random(5, 40)); // generate a number between 10-60    
    
    // here we put it all together!
    stroke(r, g, b);
    strokeWeight(randomSize);
    point(randomX, randomY);
    
  }
  
  // here we draw our text:
  
  // first we create a String variable and assign our text to it in quote marks
  String assignment = "To turn in your assignment: save, zip, & email processing sketch folder to aperry30@uic.edu - include image files and generated image!";
  textAlign(CENTER); // here we choose our text alignment (center, left, right, etc - must be in all caps)
  
  // here we draw a "shadow" text for readability
  fill(0);
  text(assignment, 204, 104, width - 400, height - 200); // see below
  
  // here we draw the top "light" text
  textSize(100); // how big?
  fill(255); // what color of text to we create?
  text(assignment, 200, 100, width - 400, height - 200); // here we draw the text to the screen and create a text box, like a rect()  
}

// this code lets us use mouse interactivity to create a saved image of what is on our canvas
// the name of the image is generated by calling the millis() function, a live count
// of the milliseconds variable of the system clock
void mousePressed() {
  save("image" + millis() + ".png");
}
